{#
/**
 * Copyright Â© 2003-2024 The Galette Team
 *
 * This file is part of Galette (https://galette.eu).
 *
 * Galette is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Galette is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Galette. If not, see <http://www.gnu.org/licenses/>.
 */
#}
{% extends 'elements/list.html.twig' %}
{% import "macros.twig" as macros %}

{% set nb = nb_events %}

{% set form = {
    'order': {
        'name': 'events_events'
    }
} %}

{% block infoline %}
    {% set infoline = {
        'label': _Tn("%1$s event", "%1$s events", nb, "events")|replace({"%1$s": nb}),
        'route': {
            'name': 'filter-eventslist'
        }
    } %}
    {{ parent() }}
{% endblock %}

{% block infoline_actions %}
    {% if login.isAdmin() or login.isStaff() or login.isGroupManager() %}
        <a
            class="ui tiny labeled icon button"
            href="{{ url_for("events_event_add") }}"
        >
            <i class="plus circle green icon" aria-hidden="true"></i>
            {{ _T('New event', 'events') }}
        </a>
    {% endif %}
{% endblock %}

{% block header %}
    {% set columns = [
        {'label': '#'},
        {'label': _T("Name", "events"), order: constant('GaletteEvents\\Repository\\Events::ORDERBY_NAME')},
        {'label': _T("Date", "events"), order: constant('GaletteEvents\\Repository\\Events::ORDERBY_DATE')},
        {'label': _T("Town", "events"), order: constant('GaletteEvents\\Repository\\Events::ORDERBY_TOWN')},
        {'label': _T("Group", "events")},
        {'label': _T("Open", "events")},
    ] %}
    {{ parent() }}
{% endblock %}

{% block body %}
    {% if events|length %}
        {% for ordre, event in events %}
    <tr class="{{ loop.index is odd ? 'odd' : 'even' }}">
        <td class="right" data-scope="id">
            {% if preferences.pref_show_id %}
                {{ event.getId() }}
            {% else %}
                {{ ordre + 1 + (filters.current_page - 1) * numrows }}
            {% endif %}
        </td>
        <td class="nowrap username_row" data-scope="row">
            {% set eid = event.getId() %}
            {% if login.isAdmin() or login.isStaff() or (login.isGroupManager() and event.getGroup() in login.managed_groups) %}
                {#<input type="checkbox" name="entries_sel[]" value="{$id}"/>#}
                <a href="{{ url_for("events_event_edit", {"id": eid}) }}">{{ event.getName() }}</a>
            {% else %}
                {{ event.getName() }}
            {% endif %}
        </td>
        <td data-col-label="{{ _T("Date", "events") }}">{{ event.getBeginDate() }}</td>
        <td data-col-label="{{ _T("Town", "events") }}">{{ event.getTown() }}</td>
        <td data-col-label="{{ _T("Group", "events") }}">{{ event.getGroupName() }}</td>
        <td class="center id_row" data-col-label="{{ _T("Open", "events") }}">
            <i class="lock{% if event.isOpen() %} open green{% else %} red{% endif %} icon tooltip" data-html="{% if event.isOpen() %}{{ _T("Event is open", "events") }}{% else %}{{ _T("Event is closed", "events") }}{% endif %}"></i>
            <span class="visually-hidden">
                {% if event.isOpen() %}
                    {{ _T("Event is open", "events") }}
                {% else %}
                    {{ _T("Event is closed", "events") }}
                {% endif %}
            </span>
        </td>
        <td class="center nowrap actions_row">
            {% set actions = [] %}
            {% if login.isAdmin() or login.isStaff() or (login.isGroupManager() and event.getGroup() in login.managed_groups) %}
                {% set actions = (actions ?? [])|merge([
                    {
                        'label': _T("%1$s: export bookings as CSV", "events")|replace({"%1$s": event.getName()}),
                        'route': {
                        'name': 'event_bookings_export',
                            'args': {'id': eid}
                        },
                        'icon': 'file excel grey'
                    },

                ]) %}
            {% endif %}

            {% set actions = (actions ?? [])|merge([
                {
                    'label': _T("%1$s: show bookings", "events")|replace({"%1$s": event.getName()}),
                    'route': {
                    'name': 'events_bookings',
                        'args': {'event': eid}
                    },
                    'icon': 'eye grey'
                }
            ]) %}

            {% if login.isAdmin() or login.isStaff() or (login.isGroupManager() and event.getGroup() in login.managed_groups) %}
                {% set actions = actions|merge([
                    {
                        'label': _T("%1$s: edit information", "events")|replace({"%1$s": event.getName()}),
                        'route': {
                        'name': 'events_event_edit',
                            'args': {'id': eid}
                        },
                        'icon': 'edit'
                    }
                ]) %}
            {% endif %}

            {% if login.isAdmin() or login.isStaff() %}
                {% set actions = actions|merge([
                    {
                        'label': _T("%1$s: remove from database", "events")|replace({"%1$s": event.getName()}),
                        'route': {
                        'name': 'events_remove_event',
                        'args': {'id': eid}
                    },
                        'icon': 'trash red',
                        'extra_class': 'delete'
                    }
                ]) %}
            {% endif %}

            {% for action in actions %}
                {{ macros.drawListAction(action.label, action.route, action.icon, action.extra_class|default('')) }}
            {% endfor %}
        </td>
    </tr>
        {% endfor %}
    {% else %}
        <tr>
            <td colspan="7" class="emptylist">{{ _T("No event has been found", "events") }}</td>
        </tr>
    {% endif %}

{% endblock %}
