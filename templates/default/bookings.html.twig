{#
/**
 * Copyright Â© 2003-2024 The Galette Team
 *
 * This file is part of Galette (https://galette.eu).
 *
 * Galette is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Galette is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Galette. If not, see <http://www.gnu.org/licenses/>.
 */
#}
{% extends 'elements/list.html.twig' %}
{% import "macros.twig" as macros %}

{% set nb = nb_bookings %}

{% set form = {
    'route': {
        'name': 'batch-eventslist'
    },
    'order': {
        'name': 'events_bookings',
        'args': {
            'event': eventid
        }
    }
} %}

{% block infoline %}
    {% set infoline = {
        'label': _Tn("%1$s booking", "%1$s bookings", nb, "events")|replace({"%1$s": nb}),
        'route': {
            'name': 'filter-bookingslist',
            'args': {
                "event": "all"
            }
        }
    } %}
    {{ parent() }}
{% endblock %}

{% block infoline_actions %}
    <a
            class="ui tiny labeled icon button"
            href="{{ url_for("events_booking_add") }}{% if event %}?event={{ event.getId() }}{% endif %}"
    >
        <i class="plus circle green icon" aria-hidden="true"></i>
        {{ _T('New booking', 'events') }}
        {% if event %} ({{ _T('current event', 'events') }}){% endif %}
    </a>
{% endblock %}

{% block header %}
    {% set columns = [
        {'label': '#'},
        {'label': _T("Event", "events"), order: constant('GaletteEvents\\Repository\\Bookings::ORDERBY_EVENT')},
        {'label': _T("Member"), order: constant('GaletteEvents\\Repository\\Bookings::ORDERBY_MEMBER')},
        {'label': _T("Booking date", "events"), order: constant('GaletteEvents\\Repository\\Bookings::ORDERBY_BOOKDATE')},
        {'label': _T("Paid", "events"), order: constant('GaletteEvents\\Repository\\Bookings::ORDERBY_PAID')},
        {'label': _T("Attendees", "events")},
    ] %}
    {{ parent() }}
{% endblock %}

{% block search %}
    <form action="{{ url_for("filter-bookingslist", {"event": eventid}) }}" method="post" id="filtre" class="ui form">
    <div class="ui secondary yellow segment">
        <div class="ui three fields">
            <div class="field">
                <label for="event_filter">{{ _T("Event", "events") }}</label>
                <select name="event_filter" id="event_filter" required="required">
                    <option value="0">{{ _T("Select...", "events") }}</option>
    {% for event in events %}
                    <option value="{{ event.getId() }}"{% if filters.event_filter == event.getId() %} selected="selected"{% endif %}>{{ event.getName() }}</option>
    {% endfor %}
                </select>
            </div>
            <div class="field">
                {# payment type #}
                {% include "components/forms/payment_types.html.twig" with {
                    current: filters.payment_type_filter,
                    varname: "payment_type_filter",
                    empty: {"value": -1, "label": _T("All payment types", "events")}
                } %}
            </div>
            <div class="field">
                <label for="group_filter" title="{{ _T("Group", "events") }}">{{ _T("Group", "events") }}</label>
                <select name="group_filter" id="group_filter">
                    <option value="0">{{ _T("Select a group") }}</option>
        {% for group in groups %}
                    <option value="{{ group.getId() }}"{% if filters.group_filter == group.getId() %} selected="selected"{% endif %}>{{ group.getIndentName()|raw }}</option>
        {% endfor %}
                </select>
            </div>
        </div>
        <div class="two fields">
            <div class="field">
                <div class="inline fields">
                    <label for="email_filter">{{ _T("Paid bookings:", "events") }}</label>
                    <div class="field inline">
                        <div class="ui radio checkbox">
                            <input type="radio" name="paid_filter" id="filter_dc_paid" value="{{ constant('GaletteEvents\\Repository\\Bookings::FILTER_DC_PAID') }}"{% if filters.paid_filter == constant('GaletteEvents\\Repository\\Bookings::FILTER_DC_PAID') %} checked="checked"{% endif %}>
                            <label for="filter_dc_paid" >{{ _T("Don't care") }}</label>
                        </div>
                    </div>
                    <div class="field inline">
                        <div class="ui radio checkbox">
                            <input type="radio" name="paid_filter" id="filter_paid" value="{{ constant('GaletteEvents\\Repository\\Bookings::FILTER_PAID') }}"{% if filters.paid_filter == constant('GaletteEvents\\Repository\\Bookings::FILTER_PAID') %} checked="checked"{% endif %}>
                            <label for="filter_paid" >{{ _T("Paid", "events") }}</label>
                        </div>
                    </div>
                    <div class="field inline">
                        <div class="ui radio checkbox">
                            <input type="radio" name="paid_filter" id="filter_not_paid" value="{{ constant('GaletteEvents\\Repository\\Bookings::FILTER_NOT_PAID') }}"{% if filters.paid_filter == constant('GaletteEvents\\Repository\\Bookings::FILTER_NOT_PAID') %} checked="checked"{% endif %}>
                            <label for="filter_not_paid" >{{ _T("Not paid", "events") }}</label>
                        </div>
                    </div>
                </div>
            </div>

            <div class="ui right aligned basic fitted segment field flexend">
                <button type="submit"  class="tooltip action ui labeled icon primary button" title="{{ _T('Apply filters') }}" name="filter">
                    <i class="search icon"></i>
                    {{ _T('Filter') }}
                </button>
                <button type="submit" name="clear_filter" class="ui labeled icon button tooltip" title="{{ _T('Reset all filters to defaults') }}">
                    <i class="trash alt red icon" aria-hidden="true"></i>
                    {{ _T('Clear filter') }}
                </button>
            </div>
        </div>
        {% include "components/forms/csrf.html.twig" %}
    </div>
    </form>
{% endblock %}

{% block footer %}
    {% if nb > 0 %}
    <tr>
        <td class="right" colspan="10">
            {{ _T("Found bookings total %f", "events")|replace({'%f': bookings.getSum()}) }}
        </td>
    </tr>
    {% endif %}
{% endblock %}

{% block body %}
    {% for ordre, booking in bookings_list %}
        {% set rclass = booking.getRowClass() %}
                <tr>
                    <td class="{{ rclass }} right" data-scope="id">{{ ordre + 1 + (filters.current_page - 1) * numrows }}</td>
                    <td class="{{ rclass }} nowrap username_row" data-scope="row">
                        {% set bid = booking.getId() %}
        {% if login.isAdmin() or login.isStaff() or (login.isGroupManager() and booking.getEvent().getGroup() in login.managed_groups) %}
                        <input type="checkbox" name="entries_sel[]" value="{{ bid }}"/>
                        <a href="{{ url_for("events_event_edit", {"id": booking.getEventId()}) }}">{{ booking.getEvent().getName() }}</a>
        {% else %}
                        {{ booking.getEvent().getName() }}
        {% endif %}
                    </td>
                    <td class="{{ rclass }}" data-col-label="{{ _T("Member") }}">
                        <a href="{{ url_for("member", {"id": booking.getMemberId()}) }}">
                            {{ booking.getMember().sfullname }}
                        </a>
                    </td>
                    <td class="{{ rclass }}" data-col-label="{{ _T("Booking date", "events") }}">{{ booking.getDate() }}</td>
                    <td class="{{ rclass }} center" data-col-label="{% if booking.isPaid() %}{{ _T("Paid", "events") }}{% else %}{{ _T("Not paid", "events") }}{% endif %}">
                        <i class="money bill wave{% if not booking.isPaid() %} red{% endif %} icon tooltip" data-html="{% if booking.isPaid() %}{{ _T("Paid", "events") }}{% else %}{{ _T("Not paid", "events") }}{% endif %}"></i>
                        <span class="visually-hidden">
                        {% if booking.isPaid() %}
                            {{ _T("Paid", "events") }}
                        {% else %}
                            {{ _T("Not paid", "events") }}"
                        {% endif %}
                        </span>
                    </td>
                    <td class="{{ rclass }}" data-col-label="{{ _T("Attendees", "events") }}">{{ booking.getNumberPeople() }}</td>
    {% if login.isAdmin() or login.isStaff() or login.isGroupManager() %}
                    <td class="{{ rclass }} center nowrap actions_row">
            {% set actions = [] %}
            {% if login.isAdmin() or login.isStaff() or (login.isGroupManager() and booking.getEvent().getGroup() in login.managed_groups) %}
                {% set actions = (actions ?? [])|merge([
                    {
                        'label': _T("Edit booking", "events"),
                        'route': {
                        'name': 'events_booking_edit',
                            'args': {'id': bid}
                        },
                        'icon': 'edit',
                    },

                ]) %}
            {% endif %}

            {% if login.isAdmin() or login.isStaff() %}
                {% set actions = (actions ?? [])|merge([
                    {
                        'label': _T("Remove from database", "events"),
                        'route': {
                        'name': 'events_remove_booking',
                            'args': {'id': bid}
                        },
                        'icon': 'trash red',
                        'extra_class': 'delete'
                    }
                ]) %}
            {% endif %}

            {% for action in actions %}
                {{ macros.drawListAction(action.label, action.route, action.icon, action.extra_class|default('')) }}
            {% endfor %}
                    </td>
    {% endif %}
                </tr>
    {% else %}
                <tr><td colspan="9" class="emptylist">{{ _T("No booking has been found", "events") }}</td></tr>
    {% endfor %}
{% endblock %}

{% if nb > 0 %}
    {% if login.isAdmin() or login.isStaff() or login.isGroupManager() %}
        {% set batch = {
            'route': {
                'name': 'batch-eventslist'
            },
            'modal': {
                'title': _T("No booking selected", "events"),
                'content': _T("Please make sure to select at least one booking from the list to perform this action.", "events")
            }
        } %}
    {% endif %}

    {% if login.isAdmin() or login.isStaff() or login.isGroupManager() and (preferences.pref_bool_groupsmanagers_exports or preferences.pref_bool_groupsmanagers_mailings) %}
        {% if login.isAdmin() or login.isStaff() or (login.isGroupManager() and preferences.pref_bool_groupsmanagers_mailings) %}
            {% if preferences.pref_mail_method != constant('Galette\\Core\\GaletteMail::METHOD_DISABLED') %}
                {% set batch_actions = [
                    {
                        'name': 'sendmail',
                        'label': _T("Mail"),
                        'icon': 'mail bulk'
                    }
                ] %}
            {% endif %}
        {% endif %}

        {% if login.isAdmin() or login.isStaff() or login.isGroupManager() and preferences.pref_bool_groupsmanagers_exports %}
            {% set batch_actions = (batch_actions ?? [])|merge([
                {
                    'name': 'csv__directdownload',
                    'label': _T("Members as CSV", "events"),
                    'title': _T("Export selected reservation members as CSV", "events"),
                    'icon': 'file excel'
                },
                {
                    'name': 'csvbooking__directdownload',
                    'label': _T("Bookings as CSV", "events"),
                    'title': _T("Export selected reservations as CSV", "events"),
                    'icon': 'file excel'
                },
                {
                    'name': 'labels__directdownload',
                    'label': _T("Generate labels"),
                    'icon': 'id badge outline'
                }
            ]) %}
        {% endif %}
    {% endif %}
{% endif %}

{% block batch_selection %}
                    else if (value == 'sendmail') {
    {% if existing_mailing == true %}
                        _sendmail(true);
    {% else %}
                        _sendmail();
    {% endif %}
                    }
{% endblock %}

{% block javascripts %}
    {% set batch_selection = ['sendmail'] %}
    {{ parent() }}
    <script type="text/javascript">
{% if nb > 0 %}
        var _sendmail = function(existing){
            console.log(existing);
            var _form = $('#listform');
                _form.append($('<input type="hidden" name="sendmail" value="true"/>'));
                _form.append($('<input type="hidden" name="mailing_new" value="true"/>'));
                _form.append($('<input type="hidden" name="mailing" value="true"/>'));
            var _redirect = '{{ url_for('mailing') }}';

            if (existing) {
                {% include "elements/js/modal.js.twig" with {
                    modal_title_twig: _T("Existing mailing")|e("js"),
                    modal_content_twig: _T("A mailing already exists. Do you want to create a new one or resume the existing?")|e("js"),
                    modal_class: "tiny",
                    modal_onapprove: "_form.submit();",
                    modal_approve_text: _T("New")|e("js"),
                    modal_approve_icon: "plus",
                    modal_approve_color: "green",
                    modal_additional_button: {
                        text: _T("Resume")|e("js"),
                        icon: "edit",
                        class: "blue",
                        click: "function() { location.href = _redirect; }"
                    }
                } %}
            } else {
                _form.submit();
            }
        }
{% endif %}
    </script>
{% endblock %}
